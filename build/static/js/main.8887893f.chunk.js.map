{"version":3,"sources":["Cell/Cell.js","Row/Row.js","Generator/Generator.js","Field/Field.js","App/App.js","serviceWorker.js","index.js"],"names":["Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","colClick","col","state","flag","document","getElementsByClassName","length","alert","setState","bomb_active","visible","SetFlag","visibility","_this2","cell","react_default","a","createElement","onClick","onContextMenu","className","React","Component","Row","coll","rows","map","src_Cell_Cell","randInt","min","max","rand","Math","random","round","Generatop","width","height","bombs","isNaN","i","j","x","y","TypeError","Field","maps","Generator","abc","row","src_Row_Row","e","preventDefault","App","ChangeHeight","event","heigth","target","value","ChangeWidth","ChangeBombs","submit","isStart","field","src_Field_Field","settings","onChange","bind","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8887893f.chunk.js","sourcesContent":["import React from 'react';\r\nclass Cell extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            visibility:false,\r\n            flag:false,\r\n            bomb_active:false\r\n        }\r\n    }\r\n    render(){\r\n        const cell = this.props.cell\r\n        if(cell===\"b\"){\r\n            return( <button onClick={()=>this.colClick(cell)} onContextMenu={()=>this.SetFlag()} className={this.state.visible ? \"visible \"+\"col_bomb \" +\"bomb_active-\"+this.state.bomb_active+ \" col \" +\"flag_\"+ this.state.flag:\"unvisible \"+\"col_bomb\" + \" col \" +\"flag_\"+ this.state.flag}></button>);\r\n        }else{\r\n            return( <button onClick={()=>this.colClick(cell)} onContextMenu={()=>this.SetFlag()} className={this.state.visible ? \"visible \"+\"col\"+cell + \"th\" + \" col \" +\"flag_\"+ this.state.flag:\"unvisible \"+\"col\"+cell + \"th\" + \" col \" +\"flag_\"+ this.state.flag}><p>{cell}</p></button>);\r\n        }\r\n    }\r\n    colClick = (col)=> {\r\n        if(!this.state.flag & document.getElementsByClassName(\"bomb_active-true \").length === 0){\r\n            if (col === 'b' ){\r\n                alert(\"GameOver\")\r\n                this.setState({\r\n                    bomb_active:true\r\n                })\r\n            }\r\n            if (!this.state.bomb_active){\r\n                this.setState({visible:true})\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    SetFlag = () =>{\r\n        if (!this.state.visible){\r\n            this.setState({\r\n                flag:!this.state.flag\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\nexport default Cell;","import React from 'react';\r\n// import FieldMap from '../FieldMap/FieldMap'\r\nimport Cell from '../Cell/Cell'\r\nclass Row extends React.Component {\r\n  render() {\r\n    const coll = this.props.rows.map((col)=>\r\n      <Cell cell = {col}/>\r\n    );\r\n    return(\r\n      <div className=\"Row\">{coll}</div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default Row;","function randInt(min, max){\r\n    let rand = min-0.5+ Math.random()*(max-min +1)\r\n    rand = Math.round(rand)\r\n    return rand\r\n}\r\nfunction Generatop(width, height, bombs){\r\n    if(!isNaN(width)&&!isNaN(height)&&!isNaN(bombs)){\r\n        let map= []\r\n        for(let i = 0;i<height;i++){\r\n            map[i] = []\r\n            for(let j=0;j<width;j++){\r\n                map[i][j] = 0\r\n            }\r\n        }     \r\n        for(let i = 0;i<=bombs;i++){\r\n            let x = randInt(0,width-1)\r\n            let y = randInt(0,height-1)\r\n            map[y][x] !== \"b\"?map[y][x] = \"b\":map[randInt(0,width-1)][randInt(0,height-1)]=\"b\"\r\n        }\r\n        for(let i = 0;i<height;i++){\r\n            for(let j=0;j<width;j++){\r\n                try{\r\n                    if(map[i+1][j] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){}try\r\n                {\r\n                    if(map[i-1][j] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){}\r\n                try{\r\n                    if(map[i][j+1] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){\r\n                    \r\n                }try{\r\n                    if(map[i][j-1] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){\r\n                    \r\n                }try{\r\n                    if(map[i+1][j+1] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){\r\n                    \r\n                }try{\r\n                    if(map[i-1][j-1] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){\r\n                    \r\n                }try{\r\n                    if(map[i+1][j-1] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){\r\n                    \r\n                }try{\r\n                    if(map[i-1][j+1] === 'b' & map[i][j] !== 'b'){\r\n                        map[i][j]++\r\n                    }\r\n                }catch(TypeError){\r\n                    \r\n                }\r\n            }\r\n        }\r\n        return map\r\n    }else{\r\n        alert(\"Поля высота ширина и бомбы болжны быть числами\")\r\n        let map = [[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]]\r\n        return map\r\n    }\r\n}\r\nexport default Generatop","import React from 'react';\r\nimport Row from '../Row/Row';\r\nimport Generator from '../Generator/Generator'\r\nclass Field extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            maps: Generator(this.props.height,this.props.width,this.props.bombs)\r\n        } \r\n    }\r\n    \r\n    render() {\r\n        const abc = this.state.maps.map((row)=>\r\n            <Row rows = {row}/>\r\n        );\r\n        return(\r\n            <div onContextMenu={(e)=>e.preventDefault()} className=\"Field\">\r\n                {abc}\r\n            </div>\r\n\r\n      );\r\n    }\r\n    \r\n\r\n}\r\n  export default Field;","import React from 'react';\r\nimport './App.css';\r\nimport Field from '../Field/Field'\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      heigth:0,\r\n      width:0,\r\n      bombs:0,\r\n      isStart: false\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const field = this.state.isStart?<Field height={this.state.heigth} width={this.state.width} bombs = {this.state.bombs}/>:<div/>;\r\n    const settings = \r\n    <section>\r\n      <div>\r\n        <p>Высота поля</p>\r\n        <input onChange={this.ChangeHeight.bind(this)} value={this.state.heigth}/>\r\n      </div>\r\n      <div>\r\n        <p>Ширина поля</p>\r\n        <input onChange={this.ChangeWidth.bind(this)} value = {this.state.width}/>\r\n      </div>\r\n      <div>\r\n        <p>Количество бомб</p>\r\n        <input onChange={this.ChangeBombs.bind(this)} value = {this.state.bombs}/>\r\n      </div>\r\n    </section>\r\n    return(\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Сапер</h1>\r\n        </header>\r\n        <main>\r\n          {field}\r\n          {this.state.isStart?\"\":settings}\r\n          <button onClick = {()=>this.submit()}>{this.state.isStart?\"Завершить игру\":\"Начать игру\"}</button>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n  ChangeHeight = (event) =>{\r\n    this.setState({\r\n      heigth:event.target.value\r\n    })\r\n  }\r\n  ChangeWidth = (event) =>{\r\n    this.setState({\r\n      width:event.target.value\r\n    })\r\n  }\r\n  ChangeBombs = (event) =>{\r\n    this.setState({\r\n      bombs:event.target.value\r\n    })\r\n  }\r\n  submit = ()=>{\r\n    this.setState({\r\n      isStart:!this.state.isStart\r\n    })\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}